name: NadekoBot_Image

on:
  workflow_dispatch:
    inputs:
      versions:
        description: "Nadeko Versions"
        required: true
        default: "v4"
      images-versions:
        description: "Docker Image Versions"
        required: true
        default: "latest"
  push:
    branches:
      - main
    paths:
      - Docker/NadekoBot/Image/*
  schedule:
    - cron: "0 16 * * *"

jobs:
  # ValidatorNadekoBot:
  #   name: "ValidatorNadekoBot"
  #   runs-on: ubuntu-latest
  #   env:
  #     working-directory: ./Docker/NadekoBot/Image
  #   steps:
  #     - name: Checking Repostiory
  #       uses: actions/checkout@v3

  #     - name: Setup Dotnet
  #       uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: '6.0.x'

  #     - name: Setup Environment
  #       env:
  #         DEFAULT_NADEKO_VERSIONS: "v4"
  #         DEFAULT_IMAGE_VERSIONS: "latest"
  #       run: |
  #         echo "NADEKO_VERSIONS=${{ github.event.inputs.versions || env.DEFAULT_NADEKO_VERSIONS }}" >> $GITHUB_ENV
  #         echo "IMAGE_VERSIONS=${{ github.event.inputs.images-versions || env.DEFAULT_IMAGE_VERSIONS }}" >> $GITHUB_ENV

  #     - name: Download NadekoBot Source Code
  #       run: |
  #         curl -Lo nadekobot.tar.bz2 https://gitlab.com/Kwoth/nadekobot/-/archive/$NADEKO_VERSIONS/nadekobot-$NADEKO_VERSIONS.tar.bz2
  #         sha256sum nadekobot.tar.bz2
  #         tar -jxvf nadekobot.tar.bz2
  #         mv nadekobot-$NADEKO_VERSIONS/* .
  #         rm nadekobot.tar.bz2
  #         rm -r nadekobot-$NADEKO_VERSIONS
  #         mkdir output
  #       working-directory: ${{ env.working-directory }}

  #     - name: Build Nadeko
  #       run: |
  #         dotnet publish -c Release -r linux-x64 -o ./output src/NadekoBot/NadekoBot.csproj
  #       working-directory: ${{ env.working-directory }}

  #     - name: Test Nadeko
  #       run: |
  #         cd src/NadekoBot.Tests
  #         dotnet test
  #       working-directory: ${{ env.working-directory }}

  ImageBuild:
    # needs: ValidatorNadekoBot
    name: "Build Nadekobot Image"
    runs-on: ubuntu-latest
    env:
      working-directory: Docker/NadekoBot/
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@v3

      - name: Setup multiarch
        uses: docker/setup-qemu-action@v2

      - name: Setup Environment
        env:
          DEFAULT_NADEKO_VERSIONS: "v4"
          DEFAULT_IMAGE_VERSIONS: "latest"
        run: |
          echo "NADEKO_VERSIONS=${{ github.event.inputs.versions || env.DEFAULT_NADEKO_VERSIONS }}" >> $GITHUB_ENV
          echo "IMAGE_VERSIONS=${{ github.event.inputs.images-versions || env.DEFAULT_IMAGE_VERSIONS }}" >> $GITHUB_ENV

      - name: Download NadekoBot Source Code
        run: |
          echo "Download NadekoBot Project..."
          curl -Lo nadekobot.tar.bz2 https://gitlab.com/Kwoth/nadekobot/-/archive/$NADEKO_VERSIONS/nadekobot-$NADEKO_VERSIONS.tar.bz2
          tar -jxvf nadekobot.tar.bz2
          mv nadekobot-$NADEKO_VERSIONS/* .

          echo "Patch Dockerfile"
          patch -p0 < Patch/Dockerfile.patch

          echo "Remove unuse file/folder"
          rm nadekobot.tar.bz2
          rm -r Patch
          rm -r nadekobot-$NADEKO_VERSIONS
        working-directory: ${{ env.working-directory }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          install: true

      - name: Login ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

        # Docker Cache Guide
        # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & Push NadekoBot Image
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.working-directory }}
          file: ${{env.working-directory}}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/xmikux/nadeko:${{ env.IMAGE_VERSIONS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # This ugly bit is necessary if you don't want your cache to grow forever
        # until it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
