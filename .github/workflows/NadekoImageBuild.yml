name: Build NadekoBotImage
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
    paths:
      - NadekoBot/Image/**
jobs:
  ValidatorNadeko:
    name: "ValidatorNadeko"
    runs-on: ubuntu-latest
    env:
      working-directory: ./NadekoBot/Image
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@v2

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Get Nadeko Source Code
        run: |
          curl -Lo nadeko.tar.gz https://gitlab.com/Kwoth/nadekobot/-/archive/v3/nadekobot-v3.tar.gz
          tar -xzf nadeko.tar.gz
          mv nadekobot-v3/* .
          rm nadeko.tar.gz
          rm -r nadekobot-v3
          mkdir output
        working-directory: ${{env.working-directory}}

      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/NuGet.Config') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Build Nadeko
        run: |
          dotnet publish -c Release -r linux-x64 -o ./output src/NadekoBot/NadekoBot.csproj
        working-directory: ${{env.working-directory}}

      - name: Test Nadeko
        run: |
          cd src/NadekoBot.Tests
          dotnet test
        working-directory: ${{env.working-directory}}

  ImageBuild:
    needs: ValidatorNadeko
    name: "Build Nadekobot Image"
    runs-on: ubuntu-latest
    env:
      working-directory: ./NadekoBot/Image
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@v2

      - name: Setup multiarch
        uses: docker/setup-qemu-action@v1

      - name: Get Nadeko Source Code
        run: |
          mv Dockerfile DockerfileCopy
          mv docker-entrypoint.sh docker-entrypointCopy.sh
          curl -Lo nadeko.tar.gz https://gitlab.com/Kwoth/nadekobot/-/archive/v3/nadekobot-v3.tar.gz
          tar -xzf nadeko.tar.gz
          mv nadekobot-v3/* .
          mv DockerfileCopy Dockerfile
          mv docker-entrypointCopy.sh docker-entrypoint.sh
          rm nadeko.tar.gz
          rm -r nadekobot-v3
        working-directory: ${{env.working-directory}}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Login ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

        # Docker Cache Guide
        # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build & Push NadekoBot Image
        uses: docker/build-push-action@v2
        with:
          context: ${{env.working-directory}}
          file: ${{env.working-directory}}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/xmikux/miku-collection:nadekobotimage
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
