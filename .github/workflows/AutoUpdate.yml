name: Auto Update Docker Version

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 16 * * *"

jobs:
  AutoUpdate:
    name: Auto ${{ matrix.name }} Docker Version
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - name: "Nadeko"
            path: "nadeko"
            git: "https://gitlab.com/Kwoth/nadekobot.git"
            workflow_id: "Build_NadekoBotImage"
          - name: "OracleCLI"
            path: "oci"
            git: "https://github.com/oracle/oci-cli.git"
            workflow_id: "OracleCLI_Image"

    steps:
      - name: Checkout Version Branch
        uses: actions/checkout@v3
        with:
          ref: auto/version

      - name: Get Latest Tag Version
        run: |
          cp ${{ matrix.path }}/version.txt ${{ matrix.path }}/tmp_version.txt
          mkdir ${{ matrix.path }}_repo
          cd ${{ matrix.path }}_repo
          git clone ${{ matrix.git }} .
          git describe --tags $(git rev-list --tags --max-count=1) > ../${{ matrix.path }}/version.txt

      - name: Checking Version Diff & Commit
        id: check_version
        run: |
          if [ $(cat ${{ matrix.path }}/version.txt) != $(cat ${{ matrix.path }}/tmp_version.txt) ]; then
            echo "!!>> Version Change Detect! Bump Up~"
            sed -i "s+v++" ${{ matrix.path }}/version.txt
            NEW_VERSION=$(cat ${{ matrix.path }}/version.txt)
            echo "::set-output name=status::true"
            echo "::set-output name=new_version::$NEW_VERSION"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add ${{ matrix.path }}/version.txt
            git commit -m "ci(${{ matrix.name }}): New Version $NEW_VERSION Updated"
            git push
          else
            echo "!!>> Version isn't change. Pass..."
            echo "::set-output name=status::false"
          fi

      - name: Trigger Action to Update
        if: |
          steps.check_version.outputs.status == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ matrix.workflow_id }}
          token: ${{ secrets.PAT }}
          ref: main
          inputs: '{ "versions":"${{ steps.check_version.outputs.new_version }}", "images-versions":"${{ steps.check_version.outputs.new_version }}" }'
