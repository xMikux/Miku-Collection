name: OracleCLI_Image

on:
  workflow_dispatch:
    inputs:
      versions:
        description: "OCI Versions"
        required: true
        default: "null"
      images-versions:
        description: "Docker Image Versions"
        required: true
        default: "latest"
  schedule:
    - cron: "0 16 * * 1"
  push:
    branches:
      - main
    paths:
      - Docker/OracleCLI/**

env:
  workflow_name: Oracle
  workflow_image: oci-cli
  working-directory: Docker/OracleCLI

jobs:
  BuildImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@v3

      - name: Setup multiarch
        uses: docker/setup-qemu-action@v2

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Setup Environment
        env:
          DEFAULT_VERSIONS: "null"
          DEFAULT_IMAGE_VERSIONS: "latest"
        run: |
          echo "VERSIONS=${{ github.event.inputs.versions || env.DEFAULT_VERSIONS }}" >> $GITHUB_ENV
          echo "IMAGE_VERSIONS=${{ github.event.inputs.images-versions || env.DEFAULT_IMAGE_VERSIONS }}" >> $GITHUB_ENV
      
      - name: Setup Version
        run: |
          if [ "$VERSIONS" = "null" ]; then
            echo "Current version: Latest"
          elif [ "$VERSIONS" != "null" ]; then
            echo "Current version: $VERSIONS"
            sed -i "s+oci-cli+oci-cli==$VERSIONS+" Docker/OracleCLI/requirements.txt
          else
            echo "ERROR"
            exit 1
          fi

      - name: Login ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build & Push (${{ env.workflow_name }})
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.working-directory }}
          file: ${{ env.working-directory }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/xmikux/${{ env.workflow_image }}:${{ env.IMAGE_VERSIONS }}
